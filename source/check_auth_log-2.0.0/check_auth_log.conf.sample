; check_auth_log.conf
;mta:
;	the mta. Default is postfix, also supported: exim
mta = postfix

;logfile:
;       the mail log file to parse, this must already exist and be readable.
logfile = /var/log/maillog

;logfile_rotated:
;       the mail log file to parse, this must already exist and be readable.
logfile_rotated = /var/log/maillog-YYYYMMDD

;cachefile:
;       a suitable location for storing info about last log file line read.
;       This file is created if it does not exist.
cachefile = /tmp/.check_auth_log_cache

;dbfile:
;       a suitable location for storing info about sasl authentications
;       login name, ip and timestamp are stored.
;       This file is created if it does not exist.
dbfile = /tmp/.check_auth_log_db

;dbtype:
;       type of database (depends on those supported by your install)
;       db4 is recommended.
;	This is a database for internal use and should not be confused
;	with the databsae used to hold uers (e.g. mysql). Do not set
;	this value to mysql.
dbtype = db4

;expire:
;       window time in seconds before sasl authentication records are
;       removed
expire = 3600

;auth_limit:
;       how many authentications per sasl username are allowed within
;       the expire window
auth_limit = 100

;ip_limit:
;       how many different ips per sasl username are allowed within the
;       expire window
ip_limit = 5

;max_auth_records:
;       the maximum number of auth session records to store
;       per sasl username
max_auth_records = 200

;posix:
;       whether to include posix functions for checking existing running
; 	processes. Requires php posix extension. You can skip this 
;	requirement (and relative checking) by setting to false. In
;	this case the stale_lock_time is used to determine how long
;	another process should be considered active before removing
;	its lock. 
;posix = true
;
;stale_lock_time:
;       the time to wait before considering another process not active
;stale_lock_time = 300

;block_type:
;       type of blocking method when users exceed predetermined limits
;       mysql: run a query defined by query_block.
;       access: write username to postfix access file defined by accessfile.
;	exim: use a file of blocked accounts
block_type = mysql

;accesfile:
;       defines the output file for postfix access map
;       This file is created if it does not exist.
accessfile = /etc/postfix/smtp_auth_access.in

;reject_msg:
;       the value to use on rhs of postfix access map
reject_msg = REJECT send quota exceeded. Contact support to re-enable

;sql_connect:
;       connect string for database in format
;       mysql://username:password@hostname:port/database
sql_connect = mysql://username:password@hostname:port/database

;sql_block:
;       query to run for blocking user access. %u is substituted with
;       the username
sql_block = "update mailbox set active=0 where username='%u'"

;sql_unblock:
;       query to run for unblocking user access. %u is substituted
;       with the username
;	example
sql_unblock = "update mailbox set active=1 where username='%u'"

;exim_block_file
;	file used by exim containing blocked email accounts
;
;exim_blcok_file = /tmp/blocklist

; exim_temp_file
;	file used when updating the exim blocklist. Modifications are
;	done to a temporary file and then it is renamed
;	in order to avoid exim using the file while it is still being
;	updated.
;
;exim_temp_file = /tmp/blocklist.out

